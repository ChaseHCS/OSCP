https://0xdf.gitlab.io/2024/09/28/htb-boardlight.html
https://0xdf.gitlab.io/2024/10/19/htb-editorial.html
https://0xdf.gitlab.io/2024/09/07/htb-mailing.html
https://0xdf.gitlab.io/2024/08/10/htb-usage.html

CHATGPT Response

üîç Step 1: Basic Banner Grab
Check the HTTP response headers and server banner.

bash
Copy
Edit
curl -I http://<ip>
Look for:

Server type (Apache, nginx, IIS)

Redirects (Location headers)

Interesting cookies

Hints of a WAF

üîé Step 2: Run an Nmap HTTP Script Scan
This pulls banners, titles, headers, and tries to identify any known HTTP services.

bash
Copy
Edit
nmap -p 80 -sV --script=http-title,http-headers,http-enum,http-methods -oN nmap_http.txt <ip>
Check for:

HTTP methods like PUT or DELETE (can be abused)

Directories or virtual hosts

Interesting headers like X-Powered-By, Server, or custom ones

üîß Step 3: Visit in Browser
Open it in Firefox or Chromium:

cpp
Copy
Edit
http://<ip>
Look for:

Login pages

File upload features

Forms

CMS (like WordPress, Joomla)

Developer notes, commented-out HTML

Broken links or hidden pages

Use Ctrl+U (view source) and check for:

JS files

Comments with usernames/emails

API endpoints






usage

chmod +x http_enum.sh
./http_enum.sh <target-ip>

script

#!/bin/bash

if [ -z "$1" ]; then
    echo "Usage: $0 <target-ip>"
    exit 1
fi

TARGET=$1
OUTPUT_DIR="http_enum_$TARGET"
mkdir -p "$OUTPUT_DIR"

echo "[*] Step 1: Nmap scan on port 80..."
nmap -p 80 -sV --script=http-title,http-headers,http-methods,http-enum -oN "$OUTPUT_DIR/nmap_http.txt" $TARGET

echo "[*] Step 2: Curl headers and homepage..."
curl -I http://$TARGET > "$OUTPUT_DIR/headers.txt"
curl -s http://$TARGET > "$OUTPUT_DIR/index.html"

echo "[*] Step 3: Checking robots.txt..."
curl -s http://$TARGET/robots.txt > "$OUTPUT_DIR/robots.txt"

echo "[*] Step 4: Directory brute force with gobuster..."
gobuster dir -u http://$TARGET -w /usr/share/wordlists/dirb/common.txt -o "$OUTPUT_DIR/gobuster_common.txt"

echo "[*] Step 5: Running Nikto (web vulnerability scanner)..."
nikto -h http://$TARGET -o "$OUTPUT_DIR/nikto.txt"

echo "[*] Step 6: CMS identification with WhatWeb..."
whatweb http://$TARGET > "$OUTPUT_DIR/whatweb.txt"

echo "[‚úì] Done. Results saved in $OUTPUT_DIR"
